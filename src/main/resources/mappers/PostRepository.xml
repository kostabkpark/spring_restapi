<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.example.spring_ex.repository.PostRepositoryInterface">
    <select id="findAll"
            resultType="org.example.spring_ex.model.Post">
        SELECT postId, title, body, likes FROM post
    </select>
<!--   version 1.0 <select id="findAllDynamic"-->
<!--            resultType="org.example.spring_ex.model.Post"-->
<!--            parameterType="String">-->
<!--        SELECT * FROM post-->
<!--        WHERE likes >= 0-->
<!--        <if test="title != null">-->
<!--            AND title like concat('%', #{title}, '%')-->
<!--        </if>-->
<!--    </select>-->
<!--   version 1.1     <select id="findAllDynamic"-->
<!--                resultType="org.example.spring_ex.model.Post"-->
<!--                parameterType="org.example.spring_ex.dto.PostRequiryDto">-->
<!--            SELECT * FROM post-->
<!--            WHERE postId >= 0-->
<!--                <choose>-->
<!--                    <when test="title != null">-->
<!--                        AND title like concat('%', #{title}, '%')-->
<!--                    </when>-->
<!--                    <when test="likes != 0">-->
<!--                        AND likes >= #{likes}-->
<!--                    </when>-->
<!--                    <otherwise>-->
<!--                        and body like "%test%"-->
<!--                    </otherwise>-->
<!--                </choose>-->
<!--        </select>-->
<!--    version 1.2 -->
    <select id="findAllDynamic"
            resultType="org.example.spring_ex.model.Post"
            parameterType="org.example.spring_ex.dto.PostRequiryDto">
        SELECT * FROM post
        <where>
            <if test="title != null and title != ''">
                AND title like concat('%', #{title}, '%')
            </if>
            <if test="likes != 0">
                AND likes >= #{likes}
            </if>
        </where>
    </select>

    <select id="findByPostId"
            resultType="org.example.spring_ex.model.Post"
            parameterType="int">
        select postId, title, body, likes FROM post
        where postId = #{postId}
    </select>
    <insert id="insertPost" parameterType="org.example.spring_ex.model.Post"
            useGeneratedKeys="true" keyProperty="postId">
        insert into post (title, body, likes)
        values (#{title}, #{body}, #{likes})
    </insert>
    <update id="updatePost" parameterType="org.example.spring_ex.model.Post">
        update post
        set likes = #{likes} , body = #{body}
        where postId = #{postId}
    </update>
    <delete id="deletePost"
            parameterType="int">
        delete from post
        where postId = #{postId}
    </delete>
</mapper>